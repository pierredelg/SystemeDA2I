#!/bin/bash

#On recupere le chemin de la racine des fichiers
#et le chemin du modele HTML provenant du script http-server
cheminRacine=$(echo "$1")
cheminModele=$(echo "$2")

set -x

#fonction permettant de supprimer le \r pour chaque ligne
function format( ) {
	echo "$1" | tr -d '\r'
}

##Le script ne traite qu'une seule requete et ensuite quitte

#On lit la 1ere ligne
read methode ressource version

#On retire le \r de la version
version=$(format "$version")

ressource=$(echo "$cheminRacine""$ressource")

#On ignore la suite
while read ligne
do
	ligne=$(format "$ligne")
	if [ "$ligne" = "" ]
	then
		break;
	fi
done

#[400]="Bad Request"

#Si la methode n'est pas GET
if [ ! "$methode" = 'GET' ]
	then
		status='405 Method Not Allowed'
		#Pour la taille on ajoute un caractere correspondant au \r
		tailleReponse='23'

#Si la version ne correspond pas a la version 1 de HTTP
elif [ ! "$version" = 'HTTP/1.1' ]
	then
		status='505 HTTP Version Not Supported'
		tailleReponse='31'

#Si la ressource est un dossier
elif [ ! -r "$resource" ]
	then
  		status='403 Forbidden'
  		tailleReponse='14'

#Si la ressource n'existe pas
elif [ ! -e "$resource" ]
	then
  		status='404 Not Found'
  		tailleReponse='14'

#Si la ressource est bien un fichier
elif [ -f "$resource" ]
	then
  		status='200 OK'
  		tailleReponse='7'

  	 	fichier=$(cat "$resource")

fi


#On prepare la réponse au format http
ligneReponse1="HTTP/1.1 $status"
printf "%s\r\n" "$ligneReponse1"
ligneReponse2="content-length : $tailleReponse"
printf "%s\r\n" "$ligneReponse2"
ligneReponse3="content-type : $contentType"
printf "%s\r\n" "$ligneReponse3"
printf "\r\n"
printf "%s" "$resource"


#reponse:
#code = [0-9]{3}
#code géré 200, 400 ,404 ,(méthode non supportée)



#le content-type est vérifié et reconnu par l'extension du fichier 
# les types mimes sont dans /etc/mime.types

#On utilise printf au lieu d'echo pour envoyer les données.

